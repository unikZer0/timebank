version: "3.8"

services:
  timebankbackend:
    build:
      context: .
      dockerfile: Dockerfile
    image: timebankbackend
    env_file: .env
    ports:
      - "3000:3000"
    volumes:
      - ./src:/usr/src/app/src:cached     
      - ./package*.json:/usr/src/app/package*.json:cached
      - ./node_modules:/usr/src/app/node_modules
    command: npx nodemon --watch src --ext js,json src/index.js
    depends_on:
      - postgres
      - redis

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: timebankworker
    env_file: .env
    command: node src/workers/myWorker.js
    depends_on:
      - redis
      - postgres

  postgres:
    image: ankane/pgvector:latest
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: timebank
      POSTGRES_DB: timebank_db
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data-timebank:/var/lib/postgresql/data/pgdata


  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data-timebank:/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file: .env
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/config:/pgadmin4/config

  ngrok:
    image: ngrok/ngrok
    command: http timebankbackend:3000
    env_file: .env
    ports:
      - "4041:4040"
    depends_on:
      - timebankbackend
    restart: always

volumes:
  postgres-data-timebank:
  redis-data-timebank:
  pgadmin-data:
